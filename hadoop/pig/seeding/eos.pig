REGISTER avro-1.4.1.jar;
REGISTER json-simple-1.1.jar;
REGISTER  jackson-mapper-asl-1.6.0.jar;
REGISTER piggybank-li-0.9.1.jar;
REGISTER  jackson-core-asl-1.6.0.jar;

A = LOAD'$member_emails_indir' USING AvroStorage('schema','{"type":"record","name":"MEMBER_EMAILS","namespace":"EOS","fields":[{"name":"EMAIL_ID","type":"long","doc":"","default":0,"attributes_json":"{\'type\':\'NUMBER\',\'size\':22,\'prec\':22,\'scale\':0,\'delta\':false,\'pk\':true,\'nullable\':false}"},{"name":"MEMBER_ID","type":["null","long"],"doc":"","default":null,"attributes_json":"{\'type\':\'NUMBER\',\'size\':22,\'prec\':22,\'scale\':0,\'delta\':false,\'pk\':false,\'nullable\':true}"},{"name":"IS_PRIMARY","type":["null","long"],"doc":"","default":null,"attributes_json":"{\'type\':\'NUMBER\',\'size\':22,\'prec\':22,\'scale\':0,\'delta\':false,\'pk\':false,\'nullable\':true}"},{"name":"IS_CONFIRMED","type":"string","doc":"","default":"","attributes_json":"{\'type\':\'CHAR\',\'size\':1,\'delta\':false,\'pk\':false,\'nullable\':false}"},{"name":"TXN","type":"long","doc":"","default":0,"attributes_json":"{\'type\':\'NUMBER\',\'size\':22,\'prec\':22,\'scale\':0,\'delta\':false,\'pk\':false,\'nullable\':false}"}],"attributes_json":"{\'instance\':\'PEOS\',\'dumpdate\':\'20120207080912\',\'isFull\':true,\'begin_date\':\'20120207075912\',\'end_date\':\'20120207081414\',\'total_records\':199309635,\'oracle_scn\':\'\',\'oracle_time\':-1}"}');

B = LOAD'$emails_indir' USING AvroStorage('schema','{"type":"record","name":"EMAILS","namespace":"EOS","fields":[{"name":"EMAIL_ID","type":"long","doc":"","default":0,"attributes_json":"{\'type\':\'NUMBER\',\'size\':22,\'prec\':22,\'scale\':0,\'delta\':false,\'pk\':true,\'nullable\':false}"},{"name":"EMAIL","type":"string","doc":"","default":"","attributes_json":"{\'type\':\'VARCHAR2\',\'size\':50,\'delta\':false,\'pk\':false,\'nullable\':false}"},{"name":"BOUNCED","type":"string","doc":"","default":"","attributes_json":"{\'type\':\'CHAR\',\'size\':1,\'delta\':false,\'pk\':false,\'nullable\':false}"},{"name":"DATE_ADDED","type":"long","doc":"","default":0,"attributes_json":"{\'type\':\'DATE\',\'size\':7,\'delta\':false,\'pk\':false,\'nullable\':false}"},{"name":"LAST_CONFIRM_SENT","type":["null","long"],"doc":"","default":null,"attributes_json":"{\'type\':\'DATE\',\'size\':7,\'delta\':false,\'pk\':false,\'nullable\':true}"}],"attributes_json":"{\'instance\':\'PEOS\',\'dumpdate\':\'20120207080328\',\'isFull\':true,\'begin_date\':\'20120207075329\',\'end_date\':\'20120207082058\',\'total_records\':569927038,\'oracle_scn\':\'\',\'oracle_time\':-1}"}');

C = JOIN A by $0, B by $0 parallel 300;
-- Output fields : Txn, key (EmailId), EmailId, Email, MemberId, IsPrimary, IsConfirmed
D = foreach C generate $4,$0 as key,$0,$6,$1,$2,$3;
E = ORDER D by $1 parallel 300;

store E into '$outdir' using AvroStorage('schema','{"name" : "MemberEmails_V1", "doc" : "Auto-generated Avro schema for eos.sy\$member_emails. Generated at Sep 15, 2011 11:59:19 AM PDT", "type" : "record", "meta" : "dbFieldName=eos.sy\$member_emails;", "namespace" : "com.linkedin.events.eos", "fields" : [ { "name" : "txn", "type" : [ "long", "null" ], "meta" : "dbFieldName=TXN;dbFieldPosition=0;" }, { "name" : "key", "type" : [ "long", "null" ], "meta" : "dbFieldName=KEY;dbFieldPosition=1;" }, { "name" : "emailId", "type" : [ "long", "null" ], "meta" : "dbFieldName=EMAIL_ID;dbFieldPosition=2;" }, { "name" : "email", "type" : [ "string", "null" ], "meta" : "dbFieldName=EMAIL;dbFieldPosition=3;" }, { "name" : "memberId", "type" : [ "long", "null" ], "meta" : "dbFieldName=MEMBER_ID;dbFieldPosition=4;" }, { "name" : "isPrimary", "type" : [ "long", "null" ], "meta" : "dbFieldName=IS_PRIMARY;dbFieldPosition=5;" }, { "name" : "isConfirmed", "type" : [ "string", "null" ], "meta" : "dbFieldName=IS_CONFIRMED;dbFieldPosition=6;"} ]}');

-- Dump 20 records to STDOUT
check = LOAD '$outdir' using
AvroStorage('schema','{"name" : "MemberEmails_V1", "doc" : "Auto-generated Avro schema for eos.sy\$member_emails. Generated at Sep 15, 2011 11:59:19 AM PDT", "type" : "record", "meta" : "dbFieldName=eos.sy\$member_emails;", "namespace" : "com.linkedin.events.eos", "fields" : [ { "name" : "txn", "type" : [ "long", "null" ], "meta" : "dbFieldName=TXN;dbFieldPosition=0;" }, { "name" : "key", "type" : [ "long", "null" ], "meta" : "dbFieldName=KEY;dbFieldPosition=1;" }, { "name" : "emailId", "type" : [ "long", "null" ], "meta" : "dbFieldName=EMAIL_ID;dbFieldPosition=2;" }, { "name" : "email", "type" : [ "string", "null" ], "meta" : "dbFieldName=EMAIL;dbFieldPosition=3;" }, { "name" : "memberId", "type" : [ "long", "null" ], "meta" : "dbFieldName=MEMBER_ID;dbFieldPosition=4;" }, { "name" : "isPrimary", "type" : [ "long", "null" ], "meta" : "dbFieldName=IS_PRIMARY;dbFieldPosition=5;" }, { "name" : "isConfirmed", "type" : [ "string", "null" ], "meta" : "dbFieldName=IS_CONFIRMED;dbFieldPosition=6;"} ]}');
val = limit check 20;
dump val;

