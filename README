
Databus is a low latency change capture system which has become an integral part of LinkedIn’s data processing pipeline. Databus addresses a fundamental requirement to reliably capture, flow and process.
Even though Databus is source agnostic ( meaning it works for different kinds of Database systems ), the current version comes with Adapters to capture change streams from Oracle.
It is assumed that the user has a license to work with an Oracle database, and therefore access to jar with ivy co-ordinates of com.oracle:ojdbc6:11.2.0.2.0. Due to licensing constraints, we cannot 
provide that jar.

Build System
------------
Databus currently needs gradle version 1.0 to build. The commands to build are :
gradle assemble -- builds the jars and command line package
gradle clean    -- cleans the build directory
gradle test     -- runs all the unit-tests that come packaged with the source

Licensing
--------
Databus will be licensed under Apache 2.0 license

Example Relay
-------------

An example of writing a DatabusRelay is available at PersonRelayServer.java. To be able to start a relay process, the code is packaged into a startable command-line package. The tarball may be obtained from build/databus2-example-relay-pkg/distributions/databus2-example-relay-pkg.tgz. This relay is configured to get changestreams for a view Person.

After extracting to a directory, please cd to that directory and start the relay using the following command :
* ./bin/start-example-relay.sh person

If the relay is started successfully, the output of the following curl command would look like :
$ curl http://localhost:11115/sources
[{“name”:“com.linkedin.events.example.person.Person”,“id”:40}]

Example Client
--------------

An example of writing a DatabusClient is available at PersonalClientMain.java. A sample consumer implementation can be found at [[https://gitli.corp.linkedin.com/databus/databus2/blobs/master/databus2-example/databus2-example-client/src/main/java/com/linkedin/databus/client/example/PersonConsumer.java]]. To easily be able to start the client process, the code is packaged into a startable command-line package. The tarball may be obtained from build/databus2-example-client-pkg/distributions/databus2-example-client-pkg.tgz. This client is configured to get data from the relay started previously, and configured to susbscribe for table Person.

After extracting to a directory, please cd to that directory and start the client using the following command :
* ./bin/start-example-client.sh person

If the client successfully connects to the relay we created earlier, the output of the following curl command would look like below ( indicating a client from localhost has connected to the relay ):
$curl http://localhost:11115/relayStats/outbound/http/clients
[“localhost”]
