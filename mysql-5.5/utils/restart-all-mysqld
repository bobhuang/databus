#! /usr/bin/perl

use Getopt::Long;

my $mysqld_path = "/usr/sbin/mysqld";
my $my_cnf;
my $init_sql = 0;
my $upgrade = 0;

sub bail
{
  my ($msg) = @_;
  print "$msg\n";
  exit 1;
}

sub shell_exec
{
  my ($cmd, $err_ok) = @_;
  my $err = system($cmd) ;
  
  if ($err)
  {
    print "Error running $cmd\n";
    exit(1) unless $err_ok;
  }
  
  return $err;
}

sub do_upgrade
{
  my ($tmpdir);
  $tmpdir = "/tmp/mysql-upgrade.$$";
  $ENV{MYSQL_INSTALL_MODE} = "S";
  $ENV{MYSQL_SKIP_CONFIG} = 1;
  if (shell_exec("mkdir -p $tmpdir && cd $tmpdir && ".
 ' wget -nd -r -l 1 -A rpm "http://apachev-md.linkedin.biz/~apachev/rpms/"'.
  " && rpm -U MySQL*.rpm ", 1))
  {
    print "Upgrade failed but will try to restart mysqld instances anyway".
      ". It may fail. Check it out manually afterwards.\n";
  }
  shell_exec("rm -rf $tmpdir", 1);
    
}

bail("Invalid option syntax") unless 
 GetOptions("init-sql=s" => \$init_sql,
   "upgrade" => \$upgrade);

opendir DIR, "/proc/" or bail "Could not open /proc";

my $d;
my %mysqld_h =();

while ($d = readdir DIR)
{
  if ($d =~ /\d+/)
  {
    $/ = "\x00";
    open FH, "/proc/$d/cmdline" or next;
    my $arg;
    my $is_mysqld = 0;
    
    while ($arg = <FH>)
    {
      chop $arg;
      $is_mysqld = ($arg eq $mysqld_path) unless ($is_mysqld);
      
      if ($is_mysqld)
      {
        if ($arg =~ /\-\-datadir=(.+)/)
        {
          my $server_root = $1;
          $server_root =~ s/\/data$//;
          $my_cnf = $server_root."/my.cnf";
          
          if (-f $my_cnf)
          {
            $mysqld_h{$d} = $my_cnf;
          }
        }
      }
    }
    
    close FH;
    $/= "\n";
  }
}

closedir DIR;

my @pids_to_start = ();

foreach $d (keys %mysqld_h)
{
  $my_cnf = $mysqld_h{$d};
  print "Shutting down server with defaults file $my_cnf\n";
  my $res = system("mysqladmin --defaults-file=$my_cnf -uroot shutdown");
  
  if ($res)
  {
    print "Shutdown of pid $d ($my_cnf) failed, not scheduling restart\n";
  }  
  else
  {
    print "Shutdown of pid $d ($my_cnf) ok, scheduling restart\n";
    push(@pids_to_start,$d);
  }
}

if ($upgrade)
{
  do_upgrade();
}

foreach $d (@pids_to_start)
{
  $my_cnf = $mysqld_h{$d};
  print "Starting mysqld with defaults file $my_cnf\n";
  system("mysqld_safe --defaults-file=$my_cnf &");
  
  if ($init_sql)
  {
    print "Giving the server some time to start\n";
    sleep 3;
    system("mysql --defaults-file=$my_cnf -uroot -e \"$init_sql\"");
  }
}