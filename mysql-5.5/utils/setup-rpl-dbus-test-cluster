#! /usr/bin/perl

use Socket;
use Getopt::Long;

my $num_pairs = 10;
my $test_home_dir = $ENV{HOME}."/rpl-dbus-test/";
my $master_dir_prefix = $test_home_dir."/master";
my $slave_dir_prefix = $test_home_dir."/slave";
my @MY_CNFS = ();

my $first_port = 15000;
my $max_port = 65535;
my $script_dir = "/usr/bin/";
my $exec_cmd = "";
my $do_shutdown = 0;

sub port_is_free
{
  my ($port) = @_;
  socket(SOCK,PF_INET,SOCK_STREAM,(getprotobyname('tcp'))[2]) or
    die "Could not create socket: $!\n" ;
  my $res= bind( SOCK, pack( 'Sn4x8', AF_INET, $port, "\0\0\0\0" ));
  close(SOCK);
  return $res;
}

sub bail
{
  my ($msg) = @_;
  print "$msg\n";
  exit 1;
}

sub shell_exec
{
  my ($cmd) = @_;
  system($cmd) and die "Error running $cmd\n";  
}

sub shutdown_server
{
  my ($my_cnf) = @_;
  my $res = system("mysqladmin --defaults-file=$my_cnf ".
    "--shutdown_timeout=10 -uroot shutdown");
  
  if ($res)
  {
    print "Error running MySQL shutdown for host with $my_cnf\n";
  }
}  

sub setup_master_slave_pair
{
  my ($master_port, $slave_port) = @_;
  
  $ENV{MYSQL_MASTER_PORT} = $master_port;
  $ENV{MYSQL_SLAVE_PORT} = $slave_port;
  $ENV{MYSQL_MASTER_SERVER_ID} = $master_port;
  $ENV{MYSQL_SLAVE_SERVER_ID} = $slave_port;
  $ENV{MYSQL_MASTER_HOME_DIR} = $master_dir_prefix."-".$master_port;
  $ENV{MYSQL_SLAVE_HOME_DIR} = $slave_dir_prefix."-".$slave_port;
  $ENV{MYSQL_MASTER_HOME_DIR_WIPE} = "Y";
  $ENV{MYSQL_SLAVE_HOME_DIR_WIPE} = "Y";
  $ENV{MYSQL_MASTER_HOST} = "127.0.0.1";
  
  print "Setting up master on port $master_port\n";  
  shell_exec("$script_dir/setup-master");
  push (@MY_CNFS,$ENV{MYSQL_MASTER_HOME_DIR}."/my.cnf");
  print "Setting up slave on port $slave_port\n";  
  
  shell_exec("$script_dir/setup-rpl-dbus-slave");
  push (@MY_CNFS,$ENV{MYSQL_SLAVE_HOME_DIR}."/my.cnf");
}

bail("Invalid option syntax") unless 
 GetOptions("num-pairs=s" => \$num_pairs,
   "master-dir-prefix=s" => \$master_dir_prefix,
   "slave-dir-prefix=s" => \$slave_dir_prefix,
   "script-dir=s" => \$script_dir,
   "exec-cmd=s", => \$exec_cmd,
   "shutdown", => \$do_shutdown
 );
 
my $i;

for ($i = 0; $i < $num_pairs; $i++)
{
  my $master_port = $first_port + $i;
  
  while (!port_is_free($master_port))
  {
    $master_port++;
    bail("Out of TCP ports") if ($master_port == $max_port);
  }
  
  $ENV{"MYSQL_MASTER_PORT_".($i+1)} = $master_port;
  
  my $slave_port = $master_port + $num_pairs;
  
  while (!port_is_free($slave_port))
  {
    $slave_port++;
    bail("Out of TCP ports") if ($slave_port == $max_port);
  }
  
  setup_master_slave_pair($master_port,$slave_port);
  $ENV{"MYSQL_SLAVE_PORT_".($i+1)} = $slave_port;
} 
 
if ($exec_cmd)
{
  print "Executing $exec_cmd\n";
  my $res = system($exec_cmd);
  if ($res)
  {
    print "$exec_cmd terminated with an error status $res\n";
  }
  else
  {
    print "Execution of $exec_cmd finished successfuly\n";
  }
}

if ($do_shutdown)
{
  my $my_cnf;
  
  foreach $my_cnf (@MY_CNFS)
  {
    print "Shutting down server with $my_cnf config file\n";
    shutdown_server($my_cnf);
  }
}