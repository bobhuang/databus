#! /usr/bin/perl

my $verbose = 1;
my $xtrabackup_version = "1.6";
my $xtrabackup_build_root = $ENV{HOME}."/xtrabackup-build-".
 $xtrabackup_version;
my $xtrabackup_tar_file = $xtrabackup_version.".tar.gz";
my $xtrabackup_tar_path = $xtrabackup_build_root."/xtrabackup-".
  $xtrabackup_tar_file;
my $rpm_build_root = $ENV{HOME}."/rpmbuild";
  
my $xtrabackup_src_root = "$xtrabackup_build_root/xtrabackup-$xtrabackup_version";

my $patches_applied_file = $xtrabackup_src_root."/patches_applied";

my $svn_home = get_svn_home();
my $patch_dir = $svn_home."/mysql-5.5/xtrabackup-patches/";

shell_exec("mkdir -p $xtrabackup_build_root");

if (! -f $xtrabackup_tar_path)
{
   fetch_xtrabackup();
}

if (! -d $xtrabackup_src_root)
{
  shell_exec("tar zxvf $xtrabackup_tar_path -C $xtrabackup_build_root");
}

shell_exec("mkdir -p $rpm_build_root/SOURCES");

if (! -f $patches_applied_file)
{
  shell_exec("cd $xtrabackup_src_root; cat $patch_dir/*.patch | patch -p 0");
  shell_exec("touch $patches_applied_file");
}

my $xtrabackup_files = "xtrabackup-$xtrabackup_version".
"/mysql-5.5.10/storage/innobase/xtrabackup/xtrabackup_innodb55 ".
" xtrabackup-$xtrabackup_version/libtar-1.2.11/libtar/tar4ibd".
" xtrabackup-$xtrabackup_version/xtrabackup-wrapper";
my $svn_version = get_svn_version();
my $release_tag = "r".$svn_version;
my $version_extra = "Linkedin-r".$svn_version;

shell_exec("cp $svn_home/mysql-5.5/utils/xtrabackup-wrapper $xtrabackup_src_root");
shell_exec("cd $xtrabackup_src_root && utils/build.sh 5.5 && ".
  " cd .. && ".
   "tar zcf $rpm_build_root/SOURCES/xtrabackup-$xtrabackup_tar_file".
   " $xtrabackup_files ");
shell_exec("rpmbuild --define 'linkedin_release $release_tag' ".
"-ba rpm/xtrabackup.spec");   

sub dbug_print
{
  return unless $verbose;
  my ($msg) = shift @_;
  my $text = join(' ',@_);
  print STDERR "dbug: $msg: $text\n";
}


sub shell_exec
{
  my $cmd = join(' ',@_);
  dbug_print("Running command",$cmd); 
  system(@_) == 0 || die "Command \"$cmd\" failed\n";
}

sub get_svn_version
{
  my $out = `svn info $svn_home/mysql-5.5`;
  my $rev;
  if (!($out =~/Revision:\s+(\d+)/))
  {
    die "Could not determine svn revsion from: $out\n";
  } 
  $rev = $1;
  print "svn: $rev\n";
  return $rev;
}


sub fetch_xtrabackup
{
  my $url = "http://apachev-md.linkedin.biz/~apachev/src/".
  "xtrabackup-".$xtrabackup_version.
  ".tar.gz";
  shell_exec("wget -O '$xtrabackup_tar_path' '$url'");
}


sub get_svn_home
{
  my $dir = `pwd`;
  #print "mysql_base_version: $mysql_base_version\n";
  if ($dir =~ /(.*)\/mysql\-$mysql_base_version/)
  {
    return $1;
  }
  else
  {
    die "Cannot determine SVN home from $dir\n";
  }
}
