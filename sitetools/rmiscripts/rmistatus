#!/bin/sh
# $Id: rmistatus 33147 2007-11-18 22:29:12Z dmccutch $

usage() {
        echo "error : $1"
        echo "Usage: rmistatus servername"
        exit 1
}


# resolve links - $0 may be a softlink
PRG="$0"

while [ -h "$PRG" ]; do
  ls=`ls -ld "$PRG"`
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '.*/.*' > /dev/null; then
    PRG="$link"
  else
    PRG=`dirname "$PRG"`/"$link"
  fi
done

# Get standard environment variables
PRGDIR=`dirname "$PRG"`

RMI_HOME=`cd "$PRGDIR/.." ; pwd`

source $RMI_HOME/bin/rmifuncs

#-------------------------------------------------------------------------------

if [ "$#" -lt 1 ]; then
        usage "missing servername"
fi

servername=$1 ; shift
extra_args=$*



if [ "$#" -ne 0 ]; then
        usage "too many arguments"
fi

if [ $servername != registry ]; then
        serverdir=$RMI_HOME/servers/$servername
        if [ ! -d $serverdir ]; then
                echo "error: cannot find $serverdir"
                exit 1
        fi
        
fi

# configuration files
rmi_conf=${RMI_HOME}/conf/rmi_conf.sh
server_conf=$serverdir/conf/server_conf.sh

# load configuration
if [ -f ${rmi_conf} ] ; then 
  source $rmi_conf
else
  echo "rmi_conf file missing: ${rmi_conf}"
fi

#-------------------------------------------------------------------------------

pidfile=$pid_dir/$servername.pid

if [ -f $pidfile ]; then
        pid=`head -1 $pidfile`
        status=`(ps -p ${pid} -opid,cputime,cpu,start | awk "\\$1 == $pid {printf \"%-12s : pid: %5d    cputime: %s     cpu: %s   UP since %s\",\"$servername\", \\$1, \\$2, \\$3, \\$4}")`
        if [ ! -z "$status" ]; then
                echo "$status"
        else
                echo "$servername is down"
        fi
else
        echo "$servername is not running"
fi

#-------------------------------------------------------------------------------
