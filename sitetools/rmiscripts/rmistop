#!/bin/bash
# $Id: rmistop 33147 2007-11-18 22:29:12Z dmccutch $

JAVA_CMD=$JAVA_HOME/bin/java

usage() {
        echo "error : $1"
        echo "Usage: rmistop [-k[ill]] servername"
        exit 1
}
# resolve links - $0 may be a softlink
PRG="$0"

while [ -h "$PRG" ]; do
  ls=`ls -ld "$PRG"`
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '.*/.*' > /dev/null; then
    PRG="$link"
  else
    PRG=`dirname "$PRG"`/"$link"
  fi
done

# Get where we are
PRGDIR=`dirname "$PRG"`

RMI_HOME=`cd "$PRGDIR/.." ; pwd`

source $RMI_HOME/bin/rmifuncs
#-------------------------------------------------------------------------------

killMode=false

while [ "$#" -ne 0 ]; do
    case "$1" in

    # Documented arguments
    -k|-kill)   killMode=true; shift;;
    -*) usage "unknown option ($1)";;
    *)  break
    esac
done

if [ "$#" -lt 1 ]; then
        usage "missing servername"
fi
servername=$1 ; shift

if [ "$#" -ne 0 ]; then
        usage "$# too many arguments: "
fi

if [ $servername != registry ]; then
  serverdir=$RMI_HOME/servers/$servername
  if [ ! -d $serverdir ]; then
    echo "error: cannot find $serverdir"
    exit 1
  fi
  
  rmi_conf=${RMI_HOME}/conf/rmi_conf.sh
  server_conf=$serverdir/conf/server_conf.sh

  # load configuration
  if [ -f ${rmi_conf} ] ; then 
    source $rmi_conf
  else
    # reasonable defaults
    echo "warning: ${rmi_config} not found."
  fi
  
  # 
  if [ -f  $server_conf ]; then
    source $server_conf
  else
    echo "error: cannot find server config $server_conf"
    exit 1
  fi
  # locations  
  server_lib=$serverdir/lib
  server_classes=$serverdir/classes
  logfile=${log_dir}/${servername}.log
  pidfile=${pid_dir}/${servername}.pid
  
  if [ $killMode = false ]; then
    # add the jar files and the server directory to ADD_CLASSPATH
    for file in `find $server_lib -name '*.jar'`; do
      add_classpath $file
    done
    add_classpath $server_classes
    
    # add CLASSPATH to ADD_CLASSPATH
    if [ -n $CLASSPATH ]; then
      add_classpath $CLASSPATH
    fi
  fi
fi

#-------------------------------------------------------------------------------

# build the final ADD_CLASSPATH argument
if [ ! -z $ADD_CLASSPATH ]; then
  ADD_CLASSPATH="-classpath $ADD_CLASSPATH"
fi

if [ -f $pidfile ]; then
  pid=`head -1 $pidfile`
  status=`ps -p $pid -o'user,pid=' | tail -1 | awk '{print $2}'`
  echo "Status: $status"
  if [ ! -z "$status" ] ; then
    
    if [ ! -z $stopCmd ]; then
      echo "stopping $servername ($pid) with command: $JAVA_CMD $stopCmd"
      stopCmd="$JAVA_CMD $ADD_CLASSPATH $stopCmd"
      cd $serverdir ; $stopCmd
      echo "$servername ($pid) has been stopped"
    else
      kill $pid
      echo "killed $servername process id $pid"
    fi
  else
    echo "$servername was already down"
  fi
  rm $pidfile
else
  echo "$servername is not running"
fi

#-------------------------------------------------------------------------------
