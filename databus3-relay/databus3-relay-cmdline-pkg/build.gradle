apply plugin: 'java'

dependencies {
  compile project(':databus2-relay:databus2-relay-impl')
  compile project(':databus3-relay:databus3-relay-espresso-impl')
}


task myTar(type: Tar) {
  extension = 'tar.gz'
  baseName = project.name
  compression = Compression.GZIP

  into("conf") { from "config/" }

  from("script") {
    into ("bin")
    fileMode = 0755
  }

  into("lib") {
    from project.configurations.runtime
    if (project.tasks.findByName("jar")) {
      from project.tasks.jar
    }
  }

  into("bin") {
    from("${project.rootDir}/database")
    include('**/*.sh')
    fileMode = 0755
  }

  into("schemas_registry") {
    from("${project.rootDir}/databus3-relay/databus3-relay-cmdline-pkg/espresso_schemas_registry")
    include('**/*')
  }

}

myTar.dependsOn ':databus2-relay:databus2-relay-impl:assemble'
myTar.dependsOn ':databus3-relay:databus3-relay-espresso-impl:assemble'
assemble.dependsOn myTar


// build project.classpath file with all the resovled artifacts
task printClasspath() {
  println "builddir=${project.buildDir} ; name= ${project.name}"
  File classpathFile = project.file("${project.buildDir}/${project.name}.classpath")
  def configuration = project.configurations.getByName("default")
  def runtimePath = configuration.resolve().join(":")
  //classpathFile.write(runtimePath + ":" + configuration.allArtifacts.files.getAsPath())
}
assemble.dependsOn printClasspath


configurations.testCompile.exclude(group: "com.oracle", module: "ojdbc14")



