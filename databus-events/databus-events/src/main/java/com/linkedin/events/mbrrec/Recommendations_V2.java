/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.events.mbrrec;

@SuppressWarnings("all")
/** Auto-generated Avro schema for MBRREC.SY$RECOMMENDATIONS_1. Generated at Feb 10, 2012 05:40:40 PM PST */
public class Recommendations_V2 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema.parse("{\"type\":\"record\",\"name\":\"Recommendations_V2\",\"namespace\":\"com.linkedin.events.mbrrec\",\"fields\":[{\"name\":\"txn\",\"type\":[\"long\",\"null\"],\"meta\":\"dbFieldName=TXN;dbFieldPosition=0;\"},{\"name\":\"key\",\"type\":[\"string\",\"null\"],\"meta\":\"dbFieldName=KEY;dbFieldPosition=1;\"},{\"name\":\"recRId\",\"type\":[\"long\",\"null\"],\"meta\":\"dbFieldName=REC_R_ID;dbFieldPosition=2;\"},{\"name\":\"recommendationId\",\"type\":[\"long\",\"null\"],\"meta\":\"dbFieldName=RECOMMENDATION_ID;dbFieldPosition=3;\"},{\"name\":\"createDate\",\"type\":[\"long\",\"null\"],\"meta\":\"dbFieldName=CREATE_DATE;dbFieldPosition=4;\"},{\"name\":\"modifiedDate\",\"type\":[\"long\",\"null\"],\"meta\":\"dbFieldName=MODIFIED_DATE;dbFieldPosition=5;\"},{\"name\":\"visibilityForRecR\",\"type\":[\"string\",\"null\"],\"meta\":\"dbFieldName=VISIBILITY_FOR_REC_R;dbFieldPosition=6;\"},{\"name\":\"type\",\"type\":[\"string\",\"null\"],\"meta\":\"dbFieldName=TYPE;dbFieldPosition=7;\"},{\"name\":\"state\",\"type\":[\"string\",\"null\"],\"meta\":\"dbFieldName=STATE;dbFieldPosition=8;\"},{\"name\":\"text\",\"type\":[\"string\",\"null\"],\"meta\":\"dbFieldName=TEXT;dbFieldPosition=9;\"},{\"name\":\"invitationId\",\"type\":[\"long\",\"null\"],\"meta\":\"dbFieldName=INVITATION_ID;dbFieldPosition=10;\"},{\"name\":\"relationshipCode\",\"type\":[\"string\",\"null\"],\"meta\":\"dbFieldName=RELATIONSHIP_CODE;dbFieldPosition=11;\"},{\"name\":\"recRTitle\",\"type\":[\"string\",\"null\"],\"meta\":\"dbFieldName=REC_R_TITLE;dbFieldPosition=12;\"},{\"name\":\"recROrganization\",\"type\":[\"string\",\"null\"],\"meta\":\"dbFieldName=REC_R_ORGANIZATION;dbFieldPosition=13;\"},{\"name\":\"recEId\",\"type\":[\"long\",\"null\"],\"meta\":\"dbFieldName=REC_E_ID;dbFieldPosition=14;\"},{\"name\":\"recESubjectId\",\"type\":[\"long\",\"null\"],\"meta\":\"dbFieldName=REC_E_SUBJECT_ID;dbFieldPosition=15;\"},{\"name\":\"recEFirstName\",\"type\":[\"string\",\"null\"],\"meta\":\"dbFieldName=REC_E_FIRST_NAME;dbFieldPosition=16;\"},{\"name\":\"recELastName\",\"type\":[\"string\",\"null\"],\"meta\":\"dbFieldName=REC_E_LAST_NAME;dbFieldPosition=17;\"},{\"name\":\"recETitle\",\"type\":[\"string\",\"null\"],\"meta\":\"dbFieldName=REC_E_TITLE;dbFieldPosition=18;\"},{\"name\":\"recEOrganization\",\"type\":[\"string\",\"null\"],\"meta\":\"dbFieldName=REC_E_ORGANIZATION;dbFieldPosition=19;\"},{\"name\":\"recEEmailId\",\"type\":[\"long\",\"null\"],\"meta\":\"dbFieldName=REC_E_EMAIL_ID;dbFieldPosition=20;\"},{\"name\":\"recECountry\",\"type\":[\"string\",\"null\"],\"meta\":\"dbFieldName=REC_E_COUNTRY;dbFieldPosition=21;\"},{\"name\":\"recEPostalCode\",\"type\":[\"string\",\"null\"],\"meta\":\"dbFieldName=REC_E_POSTAL_CODE;dbFieldPosition=22;\"},{\"name\":\"recEProvince\",\"type\":[\"string\",\"null\"],\"meta\":\"dbFieldName=REC_E_PROVINCE;dbFieldPosition=23;\"},{\"name\":\"recECity\",\"type\":[\"string\",\"null\"],\"meta\":\"dbFieldName=REC_E_CITY;dbFieldPosition=24;\"},{\"name\":\"replacedBy\",\"type\":[\"long\",\"null\"],\"meta\":\"dbFieldName=REPLACED_BY;dbFieldPosition=25;\"},{\"name\":\"serviceCategoryCode\",\"type\":[\"string\",\"null\"],\"meta\":\"dbFieldName=SERVICE_CATEGORY_CODE;dbFieldPosition=26;\"},{\"name\":\"serviceCategoryName\",\"type\":[\"string\",\"null\"],\"meta\":\"dbFieldName=SERVICE_CATEGORY_NAME;dbFieldPosition=27;\"},{\"name\":\"firstHiredYr\",\"type\":[\"int\",\"null\"],\"meta\":\"dbFieldName=FIRST_HIRED_YR;dbFieldPosition=28;\"},{\"name\":\"usedMoreThanOnce\",\"type\":[\"string\",\"null\"],\"meta\":\"dbFieldName=USED_MORE_THAN_ONCE;dbFieldPosition=29;\"},{\"name\":\"attributes\",\"type\":[\"int\",\"null\"],\"meta\":\"dbFieldName=ATTRIBUTES;dbFieldPosition=30;\"},{\"name\":\"excludeFromSprDir\",\"type\":[\"string\",\"null\"],\"meta\":\"dbFieldName=EXCLUDE_FROM_SPR_DIR;dbFieldPosition=31;\"}],\"meta\":\"dbFieldName=MBRREC.SY$RECOMMENDATIONS_1;\"}");
  public java.lang.Long txn;
  public java.lang.CharSequence key;
  public java.lang.Long recRId;
  public java.lang.Long recommendationId;
  public java.lang.Long createDate;
  public java.lang.Long modifiedDate;
  public java.lang.CharSequence visibilityForRecR;
  public java.lang.CharSequence type;
  public java.lang.CharSequence state;
  public java.lang.CharSequence text;
  public java.lang.Long invitationId;
  public java.lang.CharSequence relationshipCode;
  public java.lang.CharSequence recRTitle;
  public java.lang.CharSequence recROrganization;
  public java.lang.Long recEId;
  public java.lang.Long recESubjectId;
  public java.lang.CharSequence recEFirstName;
  public java.lang.CharSequence recELastName;
  public java.lang.CharSequence recETitle;
  public java.lang.CharSequence recEOrganization;
  public java.lang.Long recEEmailId;
  public java.lang.CharSequence recECountry;
  public java.lang.CharSequence recEPostalCode;
  public java.lang.CharSequence recEProvince;
  public java.lang.CharSequence recECity;
  public java.lang.Long replacedBy;
  public java.lang.CharSequence serviceCategoryCode;
  public java.lang.CharSequence serviceCategoryName;
  public java.lang.Integer firstHiredYr;
  public java.lang.CharSequence usedMoreThanOnce;
  public java.lang.Integer attributes;
  public java.lang.CharSequence excludeFromSprDir;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return txn;
    case 1: return key;
    case 2: return recRId;
    case 3: return recommendationId;
    case 4: return createDate;
    case 5: return modifiedDate;
    case 6: return visibilityForRecR;
    case 7: return type;
    case 8: return state;
    case 9: return text;
    case 10: return invitationId;
    case 11: return relationshipCode;
    case 12: return recRTitle;
    case 13: return recROrganization;
    case 14: return recEId;
    case 15: return recESubjectId;
    case 16: return recEFirstName;
    case 17: return recELastName;
    case 18: return recETitle;
    case 19: return recEOrganization;
    case 20: return recEEmailId;
    case 21: return recECountry;
    case 22: return recEPostalCode;
    case 23: return recEProvince;
    case 24: return recECity;
    case 25: return replacedBy;
    case 26: return serviceCategoryCode;
    case 27: return serviceCategoryName;
    case 28: return firstHiredYr;
    case 29: return usedMoreThanOnce;
    case 30: return attributes;
    case 31: return excludeFromSprDir;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: txn = (java.lang.Long)value$; break;
    case 1: key = (java.lang.CharSequence)value$; break;
    case 2: recRId = (java.lang.Long)value$; break;
    case 3: recommendationId = (java.lang.Long)value$; break;
    case 4: createDate = (java.lang.Long)value$; break;
    case 5: modifiedDate = (java.lang.Long)value$; break;
    case 6: visibilityForRecR = (java.lang.CharSequence)value$; break;
    case 7: type = (java.lang.CharSequence)value$; break;
    case 8: state = (java.lang.CharSequence)value$; break;
    case 9: text = (java.lang.CharSequence)value$; break;
    case 10: invitationId = (java.lang.Long)value$; break;
    case 11: relationshipCode = (java.lang.CharSequence)value$; break;
    case 12: recRTitle = (java.lang.CharSequence)value$; break;
    case 13: recROrganization = (java.lang.CharSequence)value$; break;
    case 14: recEId = (java.lang.Long)value$; break;
    case 15: recESubjectId = (java.lang.Long)value$; break;
    case 16: recEFirstName = (java.lang.CharSequence)value$; break;
    case 17: recELastName = (java.lang.CharSequence)value$; break;
    case 18: recETitle = (java.lang.CharSequence)value$; break;
    case 19: recEOrganization = (java.lang.CharSequence)value$; break;
    case 20: recEEmailId = (java.lang.Long)value$; break;
    case 21: recECountry = (java.lang.CharSequence)value$; break;
    case 22: recEPostalCode = (java.lang.CharSequence)value$; break;
    case 23: recEProvince = (java.lang.CharSequence)value$; break;
    case 24: recECity = (java.lang.CharSequence)value$; break;
    case 25: replacedBy = (java.lang.Long)value$; break;
    case 26: serviceCategoryCode = (java.lang.CharSequence)value$; break;
    case 27: serviceCategoryName = (java.lang.CharSequence)value$; break;
    case 28: firstHiredYr = (java.lang.Integer)value$; break;
    case 29: usedMoreThanOnce = (java.lang.CharSequence)value$; break;
    case 30: attributes = (java.lang.Integer)value$; break;
    case 31: excludeFromSprDir = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
}
