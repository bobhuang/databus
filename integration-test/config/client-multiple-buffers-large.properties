############## Container properties ################

# Property:    databus.client.container.httpPort
# Description: The port for the client monitoring & admin interface 
# Default:     8081
#databus.client.container.httpPort = 8081

# Property:    databus.client.container.id
# Description: The id of the client (for monitoring) 
# Default:     (Hash of the local hostname) + 1
# databus.client.container.id = 1234

############## JMX properties ################

# Property:    databus.client.container.jmx.jmxServicePort
# Description: The port for the JMX server connector
# Default:     10000
# databus.client.container.jmx.jmxServicePort = 11000

# Property:    databus.client.container.jmx.jmxServiceHost
# Description: The host name for the JMX server connector
# Default:     localhost
# databus.client.container.jmx.jmxServiceHost = localhost

# Property:    databus.client.container.jmx.rmiRegistryPort
# Description: The port of the RMI registry where the JMX server connector is to be registered
# Default:     1099
# databus.client.container.jmx.rmiRegistryPort = 1099

# Property:    databus.client.container.jmx.rmiRegistryHost
# Description: The hostname of the RMI registry where the JMX server connector is to be registered
# Default:     localhost
# databus.client.container.jmx.rmiRegistryHost = localhost

############## Container statistics collector ################

# Property:    databus.client.runtime.container.statsCollector.enabled
# Description: Enables/disables the statistics collector for the client serving container. 
# Default:     true
# databus.client.runtime.container.statsCollector.enabled = true

############## Client checkpoint persistence provider ################

# Property:    databus.client.checkpointPersistense.type
# Description: Type of checkpoint persistence provider: FILE_SYSTEM (for file-system-based
#               provider)
# Default:     FILE_SYSTEM
# databus.client.checkpointPersistense.type = FILE_SYSTEM

# Property:    databus.client.checkpointPersistense.fileSystem.rootDirectory
# Description: Directory to use for storing checkpoint files 
# Default:     ./databus2-checkpoints
# databus.client.checkpointPersistense.fileSystem.rootDirectory = /usr/var/run/databus2/checkpoints

# Property:    databus.client.runtime.checkpointPersistense.fileSystem.historyEnabled
# Description: Enables/disables keeping previous copies of checkpoint files 
# Default:     true
# databus.client.runtime.checkpointPersistense.fileSystem.historyEnabled = true

# Property:    databus.client.runtime.checkpointPersistense.fileSystem.historySize
# Description: Number of previous copies of checkpoint files to store (between 1 and 99) 
# Default:     5
# databus.client.runtime.checkpointPersistense.fileSystem.historySize = 10


############## Default client connection settings ################

# Property:    databus.client.connectionDefaults.eventBuffer.defaultMemUsage
# Description: The fraction of the available memory to be used by the event buffer
# Default:     0.75 
# databus.client.connectionDefaults.eventBuffer.defaultMemUsage = 0.75

# Property:    databus.client.connectionDefaults.eventBuffer.maxSize
# Description: The amount of memory to be used for the event buffer for data 
# Default:     80% of the databus.client.connectionDefaults.eventBuffer.defaultMemUsage 
#              * Runtime.getRuntime().maxMemory()
#maxEventBufferSize = 4582303334, maxIndividualBufferSize = 500000000, maxIndexSize = 572787916, maxR
#readBufferSize = 572787916, allocationPolicy = DIRECT_MEMORY, queuePolicy = BLOCK_ON_WRITE, eventTraceOption = none
# may need to reduce the read buffer
databus.client.connectionDefaults.eventBuffer.maxSize = 4582303334
databus.client.connectionDefaults.eventBuffer.readBufferSize = 572787916
databus.client.connectionDefaults.eventBuffer.scnIndexSize = 572787916
databus.client.connectionDefaults.eventBuffer.maxIndividualBufferSize = 500000000

# Property:    databus.client.connectionDefaults.eventBuffer.direct
# Description: A flag if the memory allocated for the event buffer data should be direct,
#              i.e. not GCed 
# Default:     true if databus.client.connectionDefaults.eventBuffer.maxSize > 10000
# databus.client.connectionDefaults.eventBuffer.direct = false

# Property:    databus.client.connectionDefaults.eventBuffer.readBufferSize
# Description: The amount of memory to be used for the event buffer for read buffering 
# Default:     10% of the databus.client.connectionDefaults.eventBuffer.defaultMemUsage 
#              * Runtime.getRuntime().maxMemory()

# Property:    databus.client.connectionDefaults.eventBuffer.scnIndexSize
# Description: The amount of memory to be used for the event buffer for the SCN index 
# Default:     10% of the databus.client.connectionDefaults.eventBuffer.defaultMemUsage * 
#              Runtime.getRuntime().maxMemory()

# enabled multiple individual consumer side event buffers

############## Per-source-collection client connection settings ################
# These settings follow the pattern of the connection defaults but the prefix 
# "databus.client.connectionDefaults" is replaced with "databus.client.connection(list_of_sources)"
# where list_of_sources is a comma-separated list of source names
# Refer to the example below

# Property:    databus.client.connection(source1,source2).eventBuffer.defaultMemUsage
# Description: The fraction of the available memory to be used by the event buffer
# Default:     0.75 
# databus.client.connection(source1,source2).eventBuffer.defaultMemUsage = 0.75

############## Relays settings ################
# The settings are customized per relay id, denoted through relayid

# Property:    databus.client.runtime.relay(relayid).name
# Description: The name of the relay
# Default:     hostname[relayid]
# databus.client.runtime.relay(relayid).name = Relay001

# Property:    databus.client.runtime.relay(relayid).host
# Description: The relay host name
# Default:     localhost
# databus.client.runtime.relay(relayid).host = relay001.ela4.linkedin.com

# Property:    databus.client.runtime.relay(relayid).port
# Description: The relay port
# Default:     8080
# databus.client.runtime.relay(relayid).port = 9090

# Property:    databus.client.runtime.relay(relayid).sources
# Description: Comma-separated list of relay sources
# Default:     <empty>
# databus.client.runtime.relay(relayid).sources = source1,source2



############## Schema registry properties ################

# Property:    databus.relay.schemaRegistry.type
# Description: The type of the schema registry schema registry: FILE_SYSTEM or REMOTE 
# Default:     FILE_SYSTEM
# databus.relay.schemaRegistry.type = FILE_SYSTEM


############## File system schema registry properties ################

# Property:    databus.relay.schemaRegistry.fileSystem.schemaDir
# Description: The directory root for the schema registry 
# Default:     ./schemas_registry where . is the directory where the relay was started
# databus.relay.schemaRegistry.fileSystem.schemaDir = /var/share/databus/schemas_registry


# Property:    databus.relay.schemaRegistry.fileSystem.refreshPeriodMs
# Description: How often the schemas directory will be checked for changes 
# Default:     3600000
# databus.relay.schemaRegistry.fileSystem.refreshPeriodMs = 60000

############# Client Relay event tracing properties ####################
# Property:    databus.client.relay.eventbuffer.trace.option
# Description: The option for tracing events inserted into the relay event buffer
# Default:     none (current available modes are: 'none', 'file')
#databus.client.connectionDefaults.eventBuffer.trace.option=file

# Property:    databus.relay.eventbuffer.trace.filename
# Description: The base name of the file used to tracing events
# Default:     databus_relay_event_trace
#databus.client.connectionDefaults.eventBuffer.trace.filename=integration-test/var/work/profile_client_relay_event_trace

# Property:    databus.relay.eventbuffer.trace.file.append
# Description: whether to append to existing trace file
# Default:     false
#databus.client.connectionDefaults.eventBuffer.trace.appendOnly=false

databus.client.connectionDefaults.enablePullerMessageQueueLogging=true
