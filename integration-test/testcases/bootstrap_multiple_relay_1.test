#!/bin/bash
#******************************************************
# set TEST_NAME before calling setup_env.inc
#******************************************************
# Bootstrap two producers reading from two relays
# one relay is bizfollow, the other is liar
export TEST_NAME=bootstrap_multiple_relay_1.test
#******************************************************
# sets up common environmnet variables and 
source setup_env.inc

#***************************************************************************************************************************************
#all ${ALL_CAPS} type vars come from setup_env.inc(except TEST_NAME)...check that file first before introducing any new variables here
#***************************************************************************************************************************************
#relay settings
relay_event_dump_file_bizfollow=${WORK_DIR_FROM_ROOT}/bizfollow_relay_event_trace_1
relay_event_dump_file_liar=${WORK_DIR_FROM_ROOT}/liar_relay_event_trace_1
relay_port_bizfollow=${RELAY_PORT_BASE}
let relay_port_liar="${RELAY_PORT_BASE} + 1"
relay_jmx_port_bizfollow=19998
relay_jmx_port_liar=19999

# producer settings
producer_port_bizfollow=${BOOTSTRAP_PRODUCER_PORT_BASE}
let producer_port_liar="${BOOTSTRAP_PRODUCER_PORT_BASE} + 1"
producer_cp_dir_bizfollow=${WORK_DIR_FROM_ROOT}/producer_checkpoint_bizfollow
producer_cp_dir_liar=${WORK_DIR_FROM_ROOT}/producer_checkpoint_liar
producer_log_file_bizfollow=producer_bizfollow.log
producer_log_file_liar=producer_liar.log

bootstrap_server_port=${BOOTSTRAP_SERVER_PORT_BASE}
# consumer settings
bizfollow_client_port=${CLIENT_PORT_BASE}
let liar_client_port="${CLIENT_PORT_BASE} + 1"
consumer_log_bizfollow=${WORK_DIR_FROM_ROOT}/bizfollow_consumer_1.events
consumer_log_liar=${WORK_DIR_FROM_ROOT}/liar_consumer_1.events
consumer_cp_dir_bizfollow=${WORK_DIR_FROM_ROOT}/consumer_checkpoint_bizfollow
consumer_cp_dir_liar=${WORK_DIR_FROM_ROOT}/consumer_checkpoint_liar

# bizfollow relay
$SCRIPT_DIR/dbus2_driver.py -c bizfollow_relay -o start  --jvm_direct_memory_size=100M --cmdline_props="databus.relay.container.httpPort=${relay_port_bizfollow};databus.relay.container.jmx.jmxServicePort=${relay_jmx_port_bizfollow};databus.relay.eventBuffer.maxSize=1024000;databus.relay.eventBuffer.scnIndexSize=102400;databus.relay.eventBuffer.trace.option=file;databus.relay.eventBuffer.trace.filename=${relay_event_dump_file_bizfollow};databus.relay.eventBuffer.trace.appendOnly=false;databus.relay.randomProducer.minLength=180;databus.relay.randomProducer.maxLength=181;"

# liar relay
$SCRIPT_DIR/dbus2_driver.py -c liar_relay -o start  --jvm_direct_memory_size=100M --jvm_args="-Xms24m -Xmx50m " --jvm_gc_log=${relay_gc_file} --cmdline_props="databus.relay.container.httpPort=${relay_port_liar};databus.relay.container.jmx.jmxServicePort=${relay_jmx_port_liar};databus.relay.eventBuffer.maxSize=1024000;databus.relay.eventBuffer.scnIndexSize=102400;databus.relay.eventBuffer.trace.option=file;databus.relay.eventBuffer.trace.filename=${relay_event_dump_file_liar};databus.relay.eventBuffer.trace.appendOnly=false"

# reset the db and delete the checkpoints
$SCRIPT_DIR/dbus2_driver.py -c bootstrap_dbreset

#bizfollow BSP
$SCRIPT_DIR/dbus2_driver.py -c test_bootstrap_producer -o start --logfile=${producer_log_file_bizfollow} --cmdline_props="databus.bootstrap.client.runtime.relay(1).port=${relay_port_bizfollow};databus.bootstrap.client.runtime.relay(1).sources=com.linkedin.events.bizfollow.bizfollow.BizFollow;databus.bootstrap.client.container.httpPort=${producer_port_bizfollow};databus.bootstrap.client.checkpointPersistence.fileSystem.rootDirectory=${producer_cp_dir_bizfollow};databus.bootstrap.client.checkpointPersistence.clearBeforeUse=true;databus.bootstrap.client.connectionDefaults.eventBuffer.maxSize=10240000;databus.bootstrap.client.connectionDefaults.eventBuffer.allocationPolicy=DIRECT_MEMORY;databus.bootstrap.client.connectionDefaults.eventBuffer.queuePolicy=BLOCK_ON_WRITE;databus.bootstrap.client.connectionDefaults.eventBuffer.readBufferSize=1024000;databus.bootstrap.client.connectionDefaults.eventBuffer.scnIndexSize=1024000;databus.bootstrap.client.connectionDefaults.enablePullerMessageQueueLogging=true"
#liar BSP
$SCRIPT_DIR/dbus2_driver.py -c test_bootstrap_producer -o start --logfile=${producer_log_file_liar} --jvm_args="-Xms24m -Xmx50m " --cmdline_props="databus.bootstrap.client.runtime.relay(1).port=${relay_port_liar};databus.bootstrap.client.runtime.relay(1).sources=com.linkedin.events.liar.jobrelay.LiarJobRelay,com.linkedin.events.liar.memberrelay.LiarMemberRelay;databus.bootstrap.client.container.httpPort=${producer_port_liar};databus.bootstrap.client.checkpointPersistence.fileSystem.rootDirectory=${producer_cp_dir_liar};databus.bootstrap.client.checkpointPersistence.clearBeforeUse=true;databus.bootstrap.client.connectionDefaults.eventBuffer.maxSize=10240000;databus.bootstrap.client.connectionDefaults.eventBuffer.allocationPolicy=DIRECT_MEMORY;databus.bootstrap.client.connectionDefaults.eventBuffer.queuePolicy=BLOCK_ON_WRITE;databus.bootstrap.client.connectionDefaults.eventBuffer.readBufferSize=1024000;databus.bootstrap.client.connectionDefaults.eventBuffer.scnIndexSize=1024000;databus.bootstrap.client.connectionDefaults.enablePullerMessageQueueLogging=true"

# generate events 
$SCRIPT_DIR/dbus2_gen_event.py -e 15000 -s 40 --num_events=1000 --wait_until_suspend --server_port=${relay_port_bizfollow}
$SCRIPT_DIR/dbus2_gen_event.py -e 15000 -s 20,21 --num_events=1000 --wait_until_suspend --server_port=${relay_port_liar}

sleep 2
mysql -uroot -Dbootstrap -vvv -e "select * from bootstrap_sources; select * from bootstrap_loginfo; select * from bootstrap_applier_state; select * from bootstrap_producer_state;"

# start the bootstrap server0
$SCRIPT_DIR/dbus2_driver.py -c bootstrap_server -o start --cmdline_props="databus.bootstrap.db.container.httpPort=${bootstrap_server_port}"


$SCRIPT_DIR/dbus2_driver.py -c liar_consumer -o start --dump_file=${consumer_log_liar} --http_port=${liar_client_port} --relay_port=${relay_port_liar} --bootstrap_port=${bootstrap_server_port} --cmdline_props="databus.client.connectionDefaults.eventBuffer.maxSize=10240000;databus.client.connectionDefaults.eventBuffer.scnIndexSize=1024000;databus.client.connectionDefaults.eventBuffer.readBufferSize=1024000;databus.client.checkpointPersistence.fileSystem.rootDirectory=${consumer_cp_dir_liar};databus.client.checkpointPersistence.clearBeforeUse=true;databus.client.connectionDefaults.enablePullerMessageQueueLogging=true"

$SCRIPT_DIR/dbus2_driver.py -c bizfollow_consumer -o start --dump_file=${consumer_log_bizfollow} --http_port=${bizfollow_client_port} --relay_port=${relay_port_bizfollow} --bootstrap_port=${boostrap_server_port} --cmdline_props="databus.client.connectionDefaults.eventBuffer.maxSize=10240000;databus.client.connectionDefaults.eventBuffer.scnIndexSize=1024000;databus.client.connectionDefaults.eventBuffer.readBufferSize=1024000;databus.client.checkpointPersistence.fileSystem.rootDirectory=${consumer_cp_dir_bizfollow};databus.client.checkpointPersistence.clearBeforeUse=true;databus.client.connectionDefaults.enablePullerMessageQueueLogging=true"

# generate events 
$SCRIPT_DIR/dbus2_gen_event.py -e 15000 -s 40 --num_events=1000 --wait_until_suspend --server_port=${relay_port_bizfollow}
$SCRIPT_DIR/dbus2_gen_event.py -e 15000 -s 20,21 --num_events=1000 --wait_until_suspend --server_port=${relay_port_liar}

# wait
#  Bug. The 
$SCRIPT_DIR/dbus2_driver.py -c bizfollow_consumer -o wait_event_bootstrap --timeout=30 --http_port=${bizfollow_client_port} --relay_port=${relay_port_bizfollow}
$SCRIPT_DIR/dbus2_driver.py -c liar_consumer -o wait_event_bootstrap --timeout=30 --relay_port=${relay_port_liar} --http_port=${liar_client_port}

# look at the log, there should be some SCN not found errors
echo ==GREP ERROR
ls -1tr $LOG_DIR/*bizfollow_relay_start* | ${TAIL_PATH} -n 1 | xargs grep ERROR
ls -1tr $LOG_DIR/*liar_relay_start* | ${TAIL_PATH} -n 1 | xargs grep ERROR

#compare result
echo ==Compare JSON
stat_txt="Test $0: compare bizfollow"
$SCRIPT_DIR/dbus2_json_compare.py -c --sort_key -s ${relay_event_dump_file_bizfollow} ${consumer_log_bizfollow} 
source report_pass_fail.inc

stat_txt="Test $0: compare liar"
$SCRIPT_DIR/dbus2_json_compare.py -c --sort_key -s ${relay_event_dump_file_liar} ${consumer_log_liar}
final_test=1
source report_pass_fail.inc

# stop
stat_txt="Stop Bizfollow Consumer"
$SCRIPT_DIR/dbus2_driver.py -c bizfollow_consumer -o stop
source report_pass_fail.inc
stat_txt="Stop Liar Consumer"
$SCRIPT_DIR/dbus2_driver.py -c liar_consumer -o stop
source report_pass_fail.inc
$SCRIPT_DIR/dbus2_driver.py -c bootstrap_server -o stop
$SCRIPT_DIR/dbus2_driver.py -c test_bootstrap_producer -o stop
$SCRIPT_DIR/dbus2_driver.py -c bizfollow_relay -o stop
$SCRIPT_DIR/dbus2_driver.py -c liar_relay -o stop

final_result=1
stat_txt="Relay Pull Thread Validation"
cat ${VIEW_ROOT}/${WORK_DIR_FROM_ROOT}/*log* | perl $SCRIPT_DIR/validateRelayPullerMessageQueue.pl
source report_pass_fail.inc

exit $all_stat

