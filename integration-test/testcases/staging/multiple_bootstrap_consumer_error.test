#!/bin/bash
# test a relay with multiple client can run with a small buffer.
#  -. start member2relay with a property file config/relay-config-small-1.properties
#  -. gen event, monitoring the buffer stats, freespace etc
#  start client before the gen_event

# start the relay on port 8080
source setup_env.inc
#NUM_CONSUMERS=20
loop_cnt=1
start_port=8081
while [ 1 ]; do

  rm -rf $WORK_DIR/ckpt_*
  NUM_CONSUMERS=4
  num=1
  while [ "$num" -le $NUM_CONSUMERS ]
  do
    #$SCRIPT_DIR/dbus2_driver.py -c bizfollow_consumer -o start --relay_host=perftest9.qa
    #$SCRIPT_DIR/dbus2_driver.py -c bizfollow_consumer -o start --relay_host=perftest9.qa --bootstrap_host=esv4-be43 --bootstrap_port=6060 --checkpoint_dir=integration-test/var/work/ckpt_${num} --cmdline_props="databus.client.connectionDefaults.eventBuffer.maxSize=10240000;databus.client.connectionDefaults.eventBuffer.scnIndexSize=1024000;databus.client.connectionDefaults.eventBuffer.readBufferSize=1024000"
    #$SCRIPT_DIR/dbus2_driver.py -c bizfollow_consumer -o start --relay_host=esv4-be40 --bootstrap_host=esv4-be39 --bootstrap_port=6060 --checkpoint_dir=integration-test/var/work/ckpt_${num} -l config/client-log4j2file.properties.error --cmdline_props="databus.client.connectionDefaults.eventBuffer.maxSize=10240000;databus.client.connectionDefaults.eventBuffer.scnIndexSize=1024000;databus.client.connectionDefaults.eventBuffer.readBufferSize=1024000"
    logname=log_${loop_cnt}_${num}
    port=$(($start_port + $num))
    log_${loop_cnt}_${num}
    $SCRIPT_DIR/dbus2_driver.py -c bizfollow_consumer -o start --http_port=$port --logfile=$logname --relay_host=esv4-be40 --relay_port=9090 --bootstrap_host=esv4-be39 --bootstrap_port=6060 --timeout=30 --checkpoint_dir=integration-test/var/work/ckpt_${num} -l config/client-log4j2file.properties.error --cmdline_props="databus.client.connectionDefaults.eventBuffer.maxSize=10240000;databus.client.connectionDefaults.eventBuffer.scnIndexSize=1024000;databus.client.connectionDefaults.eventBuffer.readBufferSize=1024000"
    let "num+=1"
  done     
  sleep 7200
  # print stats
  num=1
  while [ "$num" -le $NUM_CONSUMERS ]
  do
    logname=log_${loop_cnt}_${num}
    port=$(($start_port + $num))
    echo "bootstrap stats" >> $logname
    python -c "import urllib; print urllib.urlopen('http://localhost:esv4-be38:${port}/containerStats/bootstrap/events/total').read()" >> $logname
    echo "inbound stats" >> $logname
    python -c "import urllib; print urllib.urlopen('http://localhost:${port}/containerStats/inbound/events/total').read()" >> $logname
    let "num+=1"
  done     

  let "loop_cnt+=1"
  # kill all
  jps | cut -f1 -d\  | xargs kill -9
  sleep 5
done

