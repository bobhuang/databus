#!/bin/bash

#******************************************************
# set TEST_NAME before calling setup_env.inc
#******************************************************
# simple bootstrap test, generate random event, put that in bootstrap
# Test for bug DDS-512
export TEST_NAME=bootstrap_bizfollow_db_2.test
#******************************************************
# sets up common environmnet variables and 
source setup_env.inc

#***************************************************************************************************************************************
#all ${ALL_CAPS} type vars come from setup_env.inc(except TEST_NAME)...check that file first before introducing any new variables here
#***************************************************************************************************************************************
relay_port=${RELAY_PORT_BASE}
bootstrap_producer_port=${BOOTSTRAP_PRODUCER_PORT_BASE}
bootstrap_server_port=${BOOTSTRAP_SERVER_PORT_BASE}
client_port=${CLIENT_PORT_BASE}
relay_event_dump_file=${WORK_DIR_FROM_ROOT}/bizfollow_relay_event_trace
db_config_file=config/sources-bizfollow.json 
consumer_1_log=${WORK_DIR_FROM_ROOT}/bizfollow_consumer_1.events
consumer_1_value_log=${WORK_DIR_FROM_ROOT}/bizfollow_consumer_1.values


$SCRIPT_DIR/dbus2_driver.py -c db_relay -o start --db_config_file=${db_config_file} --cmdline_props="databus.relay.eventBuffer.maxSize=1024000;databus.relay.eventBuffer.scnIndexSize=102400;databus.relay.eventBuffer.trace.option=file;databus.relay.eventBuffer.trace.filename=${relay_event_dump_file};databus.relay.eventBuffer.trace.appendOnly=false;databus.relay.container.httpPort=${relay_port}" --jvm_direct_memory_size=10M

# reset the db and delete the checkpoints
$SCRIPT_DIR/dbus2_driver.py -c bootstrap_dbreset


# start the producer, use a given port to avoid conflict with consumer
$SCRIPT_DIR/dbus2_driver.py -c test_bootstrap_producer -o start --cmdline_props="databus.bootstrap.client.runtime.relay(1).sources=com.linkedin.events.bizfollow.bizfollow.BizFollow;databus.bootstrap.client.container.httpPort=${bootstrap_producer_port};databus.bootstrap.client.runtime.relay(1).port=${relay_port}"

# truncate
$SCRIPT_DIR/dbus2_gen_event.py --db_gen -s bizfollow  --db_config_file=${db_config_file} --db_testdata_truncate --from_scn=1 --server_port=${relay_port}
$SCRIPT_DIR/dbus2_gen_event.py -s bizfollow --db_testdata_insert --db_config_file=${db_config_file} --num_events=9000 --server_port=${relay_port}      # 100K/0.2K = 500

# start the bootstrap server0
$SCRIPT_DIR/dbus2_driver.py -c bootstrap_server -o start --cmdline_props="databus.bootstrap.db.container.httpPort=${bootstrap_server_port}"

# start the consumer
$SCRIPT_DIR/dbus2_driver.py -c bizfollow_consumer -o start --http_port=${client_port} --relay_port=${relay_port} --dump_file=${consumer_1_log}  --value_file=${consumer_1_value_log} --bootstrap_port=${bootstrap_server_port} --cmdline_props="databus.client.connectionDefaults.eventBuffer.maxSize=10240000;databus.client.connectionDefaults.eventBuffer.scnIndexSize=1024000;databus.client.connectionDefaults.eventBuffer.readBufferSize=1024000"

# wait for event, this will not work due to DDS-507, so will timeout
$SCRIPT_DIR/dbus2_driver.py -c bizfollow_consumer -o wait_event --timeout=20 --http_port=${client_port} --relay_port=${relay_port}
 
# look at the log, there should be some SCN not found errors
echo ==GREP ERROR
ls -1tr $LOG_DIR/*relay_start* | ${TAIL_PATH} -n 1 | xargs grep ERROR
ls -1tr $LOG_DIR/*consumer_start* | ${TAIL_PATH} -n 1 | xargs grep "Bootstrap completed"

stat_txt="Test $0 Step 1"
echo ==$stat_txt :Compare JSON
$SCRIPT_DIR/dbus2_json_compare.py -s $VIEW_ROOT/${relay_event_dump_file} ${consumer_1_log}
source report_pass_fail.inc

exit 0
#compare result
stat_txt="Test $0 Step 2"
$SCRIPT_DIR/dbus2_json_compare.py  -c --sort_key --db_src_ids=40 --db_config_file=${db_config_file} ${consumer_1_value_log}
source report_pass_fail.inc

# stop
$SCRIPT_DIR/dbus2_driver.py -c db_relay -o stop
$SCRIPT_DIR/dbus2_driver.py -c test_bootstrap_producer -o stop
$SCRIPT_DIR/dbus2_driver.py -c bootstrap_server -o stop
$SCRIPT_DIR/dbus2_driver.py -c bizfollow_consumer -o stop

exit $all_stat
