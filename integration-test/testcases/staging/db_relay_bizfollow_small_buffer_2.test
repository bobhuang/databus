#!/bin/bash 
# test DDS-717
# start db relay w/o from_scn, relay will put scn 0
# start a bootstrap consumer, the consumer should try to go to bootstrap instead of going to relay 

export TEST_NAME=db_relay_bizfollow_small_buffer_2.test

source setup_env.inc
db_config_file=${CONFIG_DIR_FROM_ROOT}/sources-bizfollow.json 
relay_event_dump_file=${WORK_DIR_FROM_ROOT}/bizfollow_relay_event_trace
$SCRIPT_DIR/dbus2_driver.py -c db_relay -o start  --db_config_file=${db_config_file} --cmdline_props="databus.relay.eventBuffer.maxSize=1024000;databus.relay.eventBuffer.scnIndexSize=102400;databus.relay.eventBuffer.trace.option=file;databus.relay.eventBuffer.trace.filename=${relay_event_dump_file};databus.relay.eventBuffer.trace.appendOnly=false"
# start the consumer
#consumer_1_log=${WORK_DIR_FROM_ROOT}/bizfollow_consumer_1.events
#consumer_1_value_log=${WORK_DIR_FROM_ROOT}/bizfollow_consumer_1.values
#consumer_cp_dir=${WORK_DIR_FROM_ROOT}/consumer_checkpoint_bizfollow
#$SCRIPT_DIR/dbus2_driver.py -c bizfollow_consumer -o start --dump_file=${consumer_1_log}  --value_file=${consumer_1_value_log} --cmdline_props="databus.client.connectionDefaults.eventBuffer.maxSize=102400;databus.client.connectionDefaults.eventBuffer.allocationPolicy=DIRECT_MEMORY;databus.client.connectionDefaults.eventBuffer.queuePolicy=BLOCK_ON_WRITE;databus.client.connectionDefaults.eventBuffer.readBufferSize=20240;databus.client.connectionDefaults.eventBuffer.scnIndexSize=10240;databus.client.checkpointPersistence.fileSystem.rootDirectory=${consumer_cp_dir};databus.client.checkpointPersistence.clearBeforeUse=true"

# start db generator with no from scn
$SCRIPT_DIR/dbus2_gen_event.py -d --db_gen -s bizfollow --db_testdata_reload --db_config_file=${db_config_file} --from_scn=0

$SCRIPT_DIR/dbus2_gen_event.py -s bizfollow --db_testdata_insert --db_config_file=${db_config_file} --num_events=100

#wait for 1 secs before start checking relay and consumer inbound event
#$SCRIPT_DIR/dbus2_driver.py -c bizfollow_consumer -o wait_event --sleep_before_wait=1

# look at the log
#echo ==GREP ERROR
#ls -1tr $LOG_DIR/default_db_relay_start* | ${TAIL_PATH} -n 1 | xargs grep ERROR
#$SCRIPT_DIR/dbus2_driver.py -c bizfollow_consumer -o stop

# try to start a consumer with bootstrap and no checkpoint, we should get ScnNotFoundException
# start the consumer
consumer_2_log=${WORK_DIR_FROM_ROOT}/bizfollow_consumer_2.events
consumer_2_server_log=${VIEW_ROOT}/${LOG_DIR_FROM_ROOT}/bizfollow_consumer_bootstrap_`date +%Y_%m_%d_%H_%M_%S`.log
consumer_cp_dir_2=${WORK_DIR_FROM_ROOT}/consumer_checkpoint_bizfollow_bootstrap
#$SCRIPT_DIR/dbus2_driver.py -c bizfollow_consumer -o start --dump_file=${consumer_2_log} --logfile=${consumer_2_server_log} --bootstrap_port=6060 --cmdline_props="databus.client.connectionDefaults.eventBuffer.maxSize=102400;databus.client.connectionDefaults.eventBuffer.allocationPolicy=DIRECT_MEMORY;databus.client.connectionDefaults.eventBuffer.queuePolicy=BLOCK_ON_WRITE;databus.client.connectionDefaults.eventBuffer.readBufferSize=20240;databus.client.connectionDefaults.eventBuffer.scnIndexSize=10240;databus.client.checkpointPersistence.fileSystem.rootDirectory=${consumer_cp_dir_2};databus.client.checkpointPersistence.clearBeforeUse=true"  -l ${CONFIG_DIR_FROM_ROOT}/client-log4j2file.properties.debug

$SCRIPT_DIR/dbus2_driver.py -c bizfollow_consumer -o start --dump_file=${consumer_2_log} --logfile=${consumer_2_server_log} --bootstrap_port=6060 --cmdline_props="databus.client.connectionDefaults.eventBuffer.maxSize=102400;databus.client.connectionDefaults.eventBuffer.allocationPolicy=DIRECT_MEMORY;databus.client.connectionDefaults.eventBuffer.queuePolicy=BLOCK_ON_WRITE;databus.client.connectionDefaults.eventBuffer.readBufferSize=20240;databus.client.connectionDefaults.eventBuffer.scnIndexSize=10240;databus.client.checkpointPersistence.fileSystem.rootDirectory=${consumer_cp_dir_2};databus.client.checkpointPersistence.clearBeforeUse=true"  
$SCRIPT_DIR/dbus2_driver.py -c bizfollow_consumer -o wait_event_bootstrap --timeout=10

# look at the log, should get  ScnNotFoundException
stat_txt="Test $0"
echo grep \"Remote exception received: com.linkedin.databus.core.ScnNotFoundException\" ${consumer_2_server_log}
echo ==GREP ERROR: Remote exception received: com.linkedin.databus.core.ScnNotFoundException
grep "Remote exception received: com.linkedin.databus.core.ScnNotFoundException" ${consumer_2_server_log}
source report_pass_fail.inc

# stop
$SCRIPT_DIR/dbus2_driver.py -c db_relay -o stop
$SCRIPT_DIR/dbus2_driver.py -c bizfollow_consumer -o stop

exit $all_stat
 
