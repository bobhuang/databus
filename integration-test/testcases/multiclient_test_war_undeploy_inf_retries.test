#!/bin/bash
# Test repeated undeployment for a war with multiple client instances

#******************************************************
# set TEST_NAME before calling setup_env.inc
#******************************************************
export TEST_NAME=conn_producer_war_undeploy_inf_retries.test
#******************************************************
# sets up common environmnet variables and 
source setup_env.inc

declare -a KILL_SCENARIO=( "" "ANET" "BIZFOLLOW" "BIZFOLLOW ANET" "LIAR" "LIAR ANET" "LIAR BIZFOLLOW" "LIAR ANET BIZFOLLOW" )

#***************************************************************************************************************************************
#all ${ALL_CAPS} type vars come from setup_env.inc(except TEST_NAME)...check that file first before introducing any new variables here
#***************************************************************************************************************************************
ITER_NUM=10

for i in `seq 1 $ITER_NUM` ; do
  echo "#### BEGIN ITERATION $i"
  
  echo "#### starting anet relay" 
  $SCRIPT_DIR/dbus2_driver.py -c anet_relay_deploy -o start 
  
  echo "#### TEST 1.1 anet relay deployed successfully"
  assert_with_retry 11 "curl localhost:${ANET_RELAY_PORT}/databus2-relay-anet/admin"
  source report_pass_fail.inc
  
  echo "#### starting bizfollow relay" 
  $SCRIPT_DIR/dbus2_driver.py -c bizfollow_relay_deploy -o start 
  
  echo "#### TEST 1.2 bizfollow relay deployed successfully"
  assert_with_retry 11 "curl localhost:${BIZFOLLOW_RELAY_PORT}/databus2-relay-bizfollow/admin"
  source report_pass_fail.inc
  
  echo "#### starting liar relay" 
  $SCRIPT_DIR/dbus2_driver.py -c liar_relay_deploy -o start 
  
  echo "#### TEST 1.3 liar relay deployed successfully"
  assert_with_retry 11 "curl localhost:${LIAR_RELAY_PORT}/databus2-relay-liar/admin"
  source report_pass_fail.inc
  
  echo "#### start the multiclient"
  $SCRIPT_DIR/dbus2_driver.py -c test_multiclient_consumer_deploy -o start 
  
  echo "#### TEST 2 multiclient deployed successfully"
  assert_with_retry 11 "curl localhost:${TEST_MULTICLIENT_PORT}/databus2-client-test-consumer/admin"
  source report_pass_fail.inc

  echo "#### wait to start polling "
  sleep 5   

  echo "#### choose a kill scenario"  
  scenario_idx=$((RANDOM % 8))
  scenario=${KILL_SCENARIO[$scenario_idx]}
  complement=${KILL_SCENARIO[$((7 - scenario_idx))]}
  
  echo "Stopping relays: $scenario"
  
  if [ ! -z "$scenario" ] ; then
    for r in $scenario ; do
       eval relay_port=\$${r}_RELAY_PORT 
       eval container_port=\$${r}_RELAY_CONTAINER_PORT
       lower_r=`echo $r | tr '[:upper:]' '[:lower:]'` 
       echo "#### stopping relay $r -> ${relay_port}/${container_port}"      
       $SCRIPT_DIR/dbus2_driver.py -c ${lower_r}_relay_deploy -o stop
       
       echo "#### TEST 3.1 $r relay undeployed successfully"
       assert_false_with_retry 11 "curl localhost:${relay_port}/databus2-relay-${r}/admin"
       source report_pass_fail.inc
       
       echo "#### TEST 3.2 $r relay container stopped successfully"
       assert_false_with_retry 11 "curl localhost:${container_port}/jmx"
       source report_pass_fail.inc       
    done
  fi
  
  echo "#### puller should be in error retry mode"
  sleep 5
  
  echo "##### stop the multiclient"
  $SCRIPT_DIR/dbus2_driver.py -c test_multiclient_consumer_deploy -o stop
  
  echo "#### TEST 4.1 multiclient undeployed successfully"
  assert_false_with_retry 11 "curl localhost:${TEST_MULTICLIENT_PORT}/databus2-multi-client-test-consumer/admin"
  source report_pass_fail.inc
  
  echo "#### TEST 4.2 multiclient container stopped successfully"
  assert_false_with_retry 11 "curl localhost:${TEST_MULTICLIENT_CONTAINER_PORT}/jmx"
  source report_pass_fail.inc

  echo "#### Stopping remaining relays: $complement"
  if [ ! -z "$complement" ] ; then
    for r in $complement ; do
       echo "#### stopping relay $r"      
       eval relay_port=\$${r}_RELAY_PORT 
       eval container_port=\$${r}_RELAY_CONTAINER_PORT 
       lower_r=`echo $r | tr '[:upper:]' '[:lower:]'` 
       $SCRIPT_DIR/dbus2_driver.py -c ${lower_r}_relay_deploy -o stop
       
       echo "#### TEST 3.1 $r relay undeployed successfully"
       assert_false_with_retry 11 "curl localhost:${relay_port}/databus2-relay-${r}/admin"
       source report_pass_fail.inc
       
       echo "#### TEST 3.2 $r relay container stopped successfully"
       assert_false_with_retry 11 "curl localhost:${container_port}/jmx"
       source report_pass_fail.inc       
    done
  fi
  
  
done  

exit $all_stat

